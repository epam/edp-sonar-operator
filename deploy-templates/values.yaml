global:
  # -- namespace or a project name (in case of OpenShift)
  edpName: ""
  # -- platform type that can be "kubernetes" or "openshift"
  platform: "kubernetes"
  # -- a cluster DNS wildcard name
  dnsWildCard: ""
  openshift:
    # -- Wich type of kind will be deployed to Openshift (values: deployments/deploymentConfigs)
    deploymentType: "deployments"

# -- component name
name: sonar-operator
annotations: {}
nodeSelector: {}
tolerations: []
affinity: {}
image:
  # -- EDP sonar-operator Docker image name. The released image can be found on [Dockerhub](https://hub.docker.com/r/epamedp/sonar-operator)
  repository: epamedp/sonar-operator
  # if not defined then .Chart.AppVersion is used
  # -- EDP sonar-operator Docker image tag. The released image can be found on [Dockerhub](https://hub.docker.com/r/epamedp/sonar-operator/tags)
  tag:
imagePullPolicy: "IfNotPresent"

resources:
  limits:
    memory: 192Mi
  requests:
    cpu: 50m
    memory: 64Mi

# -- Additional volumes to be added to the pod
extraVolumes: []
#  - name: custom-ca
#    secret:
#      defaultMode: 420
#      secretName: custom-ca

# -- Additional volumeMounts to be added to the container
extraVolumeMounts: []
#  - name: custom-ca
#    mountPath: /etc/ssl/certs/CA.crt
#    readOnly: true
#    subPath: CA.crt

sonarCR:
  # -- Specifies whether Sonar CR should be created
  create: true

sonar:
  initContainers:
    # image: busybox:1.32
    # We allow the init containers to have a separate security context declaration because
    # the initContainer may not require the same as SonarQube.
    # securityContext: {}
    # We allow the init containers to have a separate resources declaration because
    # the initContainer does not take as much resources.
    resources: {}
  # -- Flag to enable/disable Sonar deploy
  deploy: true
  # -- Sonar name
  name: "sonar"
  # -- Define sonar docker image name
  image: "sonarqube"
  # -- Define sonar docker image tag
  version: "8.9.10-community"
  imagePullPolicy: "IfNotPresent"
  initImage: "busybox:1.35.0"
  # -- Base path for Sonar URL
  basePath: ""
  # -- Environment variables to attach to the sonar pod
  env:
    - name: SONAR_TELEMETRY_ENABLE
      value: "false"
  # -- Secrets to pull from private Docker registry
  imagePullSecrets:
  storage:
    data:
      # --  Storageclass for Sonar data volume
      # class: gp2
      # --  Size for Sonar data volume
      size: 1Gi
    database:
      # --  Storageclass for database data volume
      # class: gp2
      # --  Size for database data volume
      size: 1Gi
  annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    annotations: {}
    # -- pathType is only for k8s >= 1.1=
    pathType: Prefix
    # -- For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # -- See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    # ingressClassName: nginx
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  sonarqubeFolder: /opt/sonarqube
  # -- List of plugins to install.
  # For example:
  plugins:
    install:
      - "https://github.com/vaulttec/sonar-auth-oidc/releases/download/v2.1.1/sonar-auth-oidc-plugin-2.1.1.jar"
      - "https://github.com/checkstyle/sonar-checkstyle/releases/download/9.3/checkstyle-sonar-plugin-9.3.jar"
      - "https://github.com/spotbugs/sonar-findbugs/releases/download/4.2.2/sonar-findbugs-plugin-4.2.2.jar"
      - "https://github.com/jborgers/sonar-pmd/releases/download/3.4.0/sonar-pmd-plugin-3.4.0.jar"
      - "https://github.com/sbaudoin/sonar-ansible/releases/download/v2.5.1/sonar-ansible-plugin-2.5.1.jar"
      - "https://github.com/sbaudoin/sonar-yaml/releases/download/v1.7.0/sonar-yaml-plugin-1.7.0.jar"
      - "https://github.com/Inform-Software/sonar-groovy/releases/download/1.8/sonar-groovy-plugin-1.8.jar"

  resources:
    limits:
      memory: 3Gi
    requests:
      cpu: 100m
      memory: 1.5Gi

  # Provide a secret containing one or more certificate files in the keys that will be added to cacerts.
  # The cacerts file will be set via SONARQUBE_WEB_JVM_OPTS and SONAR_CE_JAVAOPTS
  caCerts:
    # -- Flag for enabling additional CA certificates
    enabled: false
    # -- Change init CA certificates container image
    image: adoptopenjdk/openjdk11:alpine
    # -- Name of the secret containing additional CA certificates
    secret: secret-name

  # -- Values to add to SONARQUBE_WEB_JVM_OPTS
  jvmOpts: ""

  # -- Values to add to SONAR_CE_JAVAOPTS
  jvmCeOpts: ""

  db:
    # -- Database image name
    image: "postgres:9.6"
    imagePullPolicy: "IfNotPresent"
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 64Mi
    annotations: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
